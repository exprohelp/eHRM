<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gridViewCommandColumn2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAytJREFUOE9tUm1Ik1EYvb7ocBubQ1u4qZuOVLamJsIsbRCK/siPin5ULkP7kxoI
        kVARRJqmIeiPTYs+MJSyNNFScFCwrCxXk6BMscIFVis/qq3Xbfo2T9c1Q6kDh3t57j3Pfe5zHrKCColE
        2bpp0+NbKhV7Si7f7w/+B/UiUd7NmBhXp0r1soEQtT94PDJS2aRUPp4tKgLKytAfE+M+LZMZ/IdrUCMS
        5fdERTl99fVw1daiU6GwNRGymZi0Wuu8wQBYrcD8PLjycpjFYvfZDRsOBLTkvEi00yyVOr1VVcDsLDA1
        hZ+NjehJSnpDrmg0blRWAmNjgN0OvH4NT3ExekJD2drw8L11YnFOP5/vYg8fBl69AiYngfFxoKsLj7Kz
        OXJKJivqSUtjfUeOAPfvAyMjwJMnYAsK0B4UxHUwjNeZnw8MDQFPnwIWC5ZNJozodN6LwcEV/hJP0nLN
        arX718GD/swYGICvrw9zej1mdDr4uruB/n7gzh34qqsxmpjIGYODj/rFqzgTEWHojY31LOXlAUYjcP06
        fK2t8LW0AG1tWKZ7rqICI0olZ2SY9eJV1ISF7R6UShfZrCygrg5obgaamrBMO7+wbx+GlcpfJkKKA9f/
        xbmwsB29KpXHIRbji0aDGZpohY70dDjUatyTyZZaCCkIXF+PFZ8HtVrXj8hIfCAEbyhtAY4JhbDHxuIb
        7YmZunaZYdbPSY1AsPNBUpJzQaHADBXYKSco3wUF4T2Ph4mICEypVHCkpIAtLIRNr3dfY5g/c3JBIik0
        p6a6luLj4aSiT4EE0yEhsAgEviGhkJveuBH2uDh8TE7Gt+3bsVhSguFt29h2hjlE7lIxtmyBl4pmKR0r
        q0CAZ+HhXpNAUGLk8fYMC4XsV9qDz7SCGZqAzc0FTpyANSfHQ25rtWM/qddL9MU5KnZKJLBFR3OtfP5f
        q+ifD7xQKNzfMzIwl5kJNx0sz7FjeJiWZicNQuHmTo3G5qTlcXI5rNTnteJVXCXE8Dwx0e3ZtQsLpaV4
        kJw80UHIVv9hA4+n7o2LG7XQGbjE55f7g//BDdp9S0LCwlB8/Nt2QtIJIeQ3pemyP4PB6jUAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>