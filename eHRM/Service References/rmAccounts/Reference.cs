//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eHRM.rmAccounts {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://exprohelp.com/", ConfigurationName="rmAccounts.Accounts_WebServiceSoap")]
    public interface Accounts_WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetMonthlyBalForChecking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMonthlyBalForChecking(out string processInfo, string from, string to, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_bulk_card_ins_request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_bulk_card_ins_request(string r_cardType, string r_card_no, string r_cust_name, string r_Mobile_no, string r_phone_no, string r_area, string r_locality, string r_district, string r_state, string r_unit_code, string r_login_id, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateIdOfNotCoded", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateIdOfNotCoded(out string processInfo, string d_code, string ArrayRecId, string separator, string status_flag, string remark, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReplaceReferral_Work", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReplaceReferral_Work(out string processInfo, string d_code, string ReplBy, string login_id, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyPFInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyPFInformation(out string processInfo, string ref_code, string Logic, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Retail_GetCardInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Retail_GetCardInfo(out string processInfo, string unit_id, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/RemarkAndContactInsertion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemarkAndContactInsertion(out string processInfo, string ref_code, string Logic, string prm_1, string prm_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveRebateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveRebateInfo(out string processInfo, string App_id, decimal app_amount, string app_by, string query, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_MergeLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_MergeLedger(out string processInfo, string logic, string repTo_Ledger_code, string repBy_Ledger_code, string voucher_no, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VoucherModifyInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateVoucherModifyInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateVoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetPatientRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatientRegister(out string processInfo, string unit_id, string fromdate, string Logic, string SearchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_ModifyVoucher", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_ModifyVoucher(string act_type, string voucher_no, string repTo_Ledger_code, string repBy_Ledger_code, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Account_PurchaseQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Account_PurchaseQueries(out string processInfo, string unit_id, string purchase_id, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CorrectInvoiceType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CorrectInvoiceType(out string processInfo, string unit_id, string purch_id, string inv_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TaxQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TaxQueries(out string processInfo, string unit_id, string stateName, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Pharmacy_UnitMismatchInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Pharmacy_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Diagnostic_UnitMismatchInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Diagnostic_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_LedgerLocking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_LedgerLocking(out string processInfo, string ledgerof, string ledger_id, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Form_Sales_UP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Form_Sales_UP(out string processInfo, string from, string to);
        
        // CODEGEN: Parameter 'Form_SalesPDFResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Form_SalesPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.Form_SalesPDFResponse Form_SalesPDF(eHRM.rmAccounts.Form_SalesPDFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InserteTax_4Det", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InserteTax_4Det(out string processInfo, int mth, string finyear, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetMonthlyTax", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMonthlyTax(out string processInfo, int Month, string Fin_year, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AdjustSales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AdjustSales(out string processInfo, string from, string to, string state, string login_id, decimal Reduce, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_GetReceivableSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_GetReceivableSummary(out string processInfo, string Comp_id, string unit_id, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DiagnosticReceivableSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DiagnosticReceivableSummary(out string processInfo, string comp_id, string unit_id, string From, string to, string ledger_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ShopInfo_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShopInfo_Queries(out string processInfo, string unit_id, string logic, string prm_1, string prm_2, string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_ComplaintWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.Insert_ComplaintWebResponse Insert_ComplaintWeb(eHRM.rmAccounts.Insert_ComplaintWebRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GenNewEqCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenNewEqCode(string eq_cat, string pur_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ins_equip_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Ins_equip_info(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string asset_type, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ins_equip_info_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Ins_equip_info_New(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string asset_type, 
                    string po_no, 
                    string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Asset_Querries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Asset_Querries(out string processInfo, string eq_code, string prm_1, string prm_2, string Logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DeleteOrDisableAssets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteOrDisableAssets(string EqNo, string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Asset_PurBillUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.Asset_PurBillUploadResponse Asset_PurBillUpload(eHRM.rmAccounts.Asset_PurBillUploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferAsset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date, decimal dpr_value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Vendor_master", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Vendor_master(out string processInfo, string v_type, string v_code, string v_name, string Contact_Person, string address, string district, string state, string Country, string ContactNo, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/fillDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillDistrict(string state_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InformToeDiagnostic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ins_investd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ins_investd(
                    out string processInfo, 
                    string ratefor, 
                    string i_code, 
                    string investi, 
                    int rate, 
                    string lab_section, 
                    decimal unit, 
                    string instruction, 
                    string forapp, 
                    string workingtable, 
                    string normalrange, 
                    string dr_fee, 
                    string rep_head, 
                    string typeoftest, 
                    string vial, 
                    string sam_qty, 
                    string ser_charges);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/tr_RadiologyRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.tr_RadiologyRegistrationResponse tr_RadiologyRegistration(eHRM.rmAccounts.tr_RadiologyRegistrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/BillPaymentChecking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BillPaymentChecking(out string processInfo, string unit_id, string ref_by, string dFrom, string dTo, string checkbill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ShiftSchedule_Bulk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ShiftSchedule_Bulk(string old_login, string new_login, string sch_date, string bulk_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/WorkBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WorkBook(out string processInfo, string hosp_id, string from, string to, string logic, string prm_1, string prm_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Client_Master", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Client_Master(
                    string unit_id, 
                    string slab_id, 
                    string client_id, 
                    string client_type, 
                    string client_name, 
                    string mobile_no, 
                    string phone_no, 
                    string add1, 
                    string add2, 
                    string email_id, 
                    string state, 
                    string district, 
                    string country, 
                    string pan_no, 
                    string cst_no, 
                    string service_tax_no, 
                    string credit_flag, 
                    decimal credit_limit, 
                    int credit_days, 
                    string tax_flag, 
                    string cStatus, 
                    string Logic, 
                    string login_id, 
                    string login_rights, 
                    string HouseFlatNo, 
                    string pin_no, 
                    string rep_header, 
                    string rep_address, 
                    string rep_contact_no, 
                    string dr1, 
                    string dr2, 
                    string dr3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Client_Querries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Client_Querries(out string processInfo, string slab_id, string client_id, string prm_1, string prm_2, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_SpecContractApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_SpecContractApproval(string client_id, string i_code, int app_rate, string cont_from, string cont_to, string app_flag, string logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertSpecialityPayment_Info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertSpecialityPayment_Info(string unit_id, string bill_no, string client_id, string PayMode, decimal amount, string chq_draft_no, string bank_name, string narration, string login_id, string AdvAdj_Flag, decimal AdvAdj_amt, string acc_narration, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SpecialityBilling_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SpecialityBilling_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Folio_master_Ins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Folio_master_Ins(
                    string comp_id, 
                    string upFolio_No, 
                    string Category, 
                    string Sh_Holder_Name, 
                    string Father_Name, 
                    string Area, 
                    string State, 
                    string district, 
                    string mobile, 
                    string eMail, 
                    string nominee, 
                    string PAN_NO, 
                    string ifscCode, 
                    string bankAc, 
                    string logic, 
                    string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_New_App_info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_New_App_info(string app_id, string comp_id, string app_date, string folio_no, int NoS, int psv, int pr_amt, decimal amount, string MoP, string Chq_Drft_No, string Chq_Drft_date, string drwan_on, string alt_flag, string alt_date, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Share_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Share_Queries(out string processInfo, string comp_id, string login_id, string logic, string prm_1, string prm_2, string prm_3, string prm_4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ShareAllotmentProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ShareAllotmentProcess(out string processInfo, string comp_id, string folio_no, string app_id, string logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_HI_CoupanMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_HI_CoupanMaster(string client_id, int Coupan_all_from, int Coupan_all_to, string emp_code, string Logic, string HIC_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_InsertMasterDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC_InsertMasterDetail(out string processInfo, string UID, string unit_id, string reg_no, string reg_date, string valid_upto, string Comp_Id, string breif_detail, string Remarks, string Logic, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_InsertMachineInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC_InsertMachineInfo(int auto_id, string eq_no, string UID, string Logic, string login_id);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_InsertDocumentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.GC_InsertDocumentInfoResponse GC_InsertDocumentInfo(eHRM.rmAccounts.GC_InsertDocumentInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_InsertEmpDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC_InsertEmpDetail(string UID, string emp_code, string login_id, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GC_MISQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GC_MISQueries(out string processInfo, string UID, string from, string to, string prm_1, string prm_2, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ICICI_SalaryTransfer_Formate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ICICI_SalaryTransfer_Formate(out string processInfo, string inp_date, string div, string prm_1, string prm_2, string prm_3, string Logic, string icic_acc);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_ConversationByDesktopApp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.Insert_ConversationByDesktopAppResponse Insert_ConversationByDesktopApp(eHRM.rmAccounts.Insert_ConversationByDesktopAppRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetWorkingStaffList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWorkingStaffList(string division, string unit_name, string district, string comp_code, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceMarkingByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AttendanceMarkingByDate(string parameter, string pMcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AttendanceMarking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AttendanceMarking(string parameter, string pMcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangePassword(string empCode, string oldPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetEmpSalaryLedgers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEmpSalaryLedgers(out string processInfo, string unit_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MarkIndvAttandence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MarkIndvAttandence(out string processInfo, string empCode, string dateOfB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Mac_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Mac_Queries(out string processInfo, string from, string to, string prm_1, string prm_2, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_TrainingMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_TrainingMaster(out string processInfo, string trainingId, string appname, string app_version, string training_point, string trained_flag, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_TrainingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_TrainingInfo(out string processInfo, string trainingId, string unit_id, string trained_by, string trained_to, string remark, string tr_flag, int rating, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Training_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Training_Queries(out string processInfo, string unit_id, string app_name, string trainingId, string prm_1, string from, string to, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Cust_Comm_Info", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Cust_Comm_Info(out string processInfo, string unit_id, string bill_No, string cust_name, string doc_type, string msg_flag, string msg_text, string doc_path, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AuthenticateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_MacInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_MacInfo(string unit_id, string mac_address, string emp_code, string app_name, string workStation, string App_version, string App_Flag, string UpdateRemark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsAdvanceSalayInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsAdvanceSalayInfo(string unit_id, string emp_code, decimal adv_amount, string login_id, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsAdvanceSalayInfo_withAdjustment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsAdvanceSalayInfo_withAdjustment(string unit_id, string emp_code, decimal adv_amount, string adjDate, string login_id, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AdvSalayInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AdvSalayInfo(out string processInfo, string mgr_code, string emp_code, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsAdvSalayInfo_Bulk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsAdvSalayInfo_Bulk(System.Data.DataSet ds, string login_id, string bulk_import_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetApprovalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetApprovalInfo(out string processInfo, string ReqId, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApprovalsPopup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApprovalsPopup(out string processInfo, string login_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AccountFromToDateQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccountFromToDateQuery(out string processInfo, string unit_id, string login_id, string prm_1, string logic, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DeleteApproval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteApproval(out string processInfo, int auto_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Expense_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Expense_Queries(out string processInfo, string logic, string unit_id, string app_id, string from, string to, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_CashPayment_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet App_CashPayment_Queries(out string processInfo, string unit_id, string app_id, string logic, string login_id, string psw);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_Info_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.App_Info_InsertResponse App_Info_Insert(eHRM.rmAccounts.App_Info_InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportExpenses_ByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportExpenses_ByUnit(string unit_id, string app_id, string narration, string loginid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AssetsName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AssetsName(out string processInfo, string asset_id);
        
        // CODEGEN: Parameter 'DownloadFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.DownloadFileResponse DownloadFile(eHRM.rmAccounts.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveRebate_queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ApproveRebate_queries(out string processInfo, string App_Id, string prm_1, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ApproveNewVendor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApproveNewVendor(out string processInfo, int autoid, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReCalculateDailyPf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReCalculateDailyPf(out string processInfo, string patient_id, string test_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/VerifyIncConfirmation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifyIncConfirmation(out string processInfo, string ref_code, string Logic, string from, string To);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/InsertRemarkOfReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertRemarkOfReferral(out string processInfo, string ref_code, string Logic, string remark, string login_id, string ByApp, string prm_1, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CalculateMonthlyPF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateMonthlyPF(out string processInfo, string d_code, string mthInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_Audit_CSL_CashTrfByUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_Audit_CSL_CashTrfByUnit(out string processInfo, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GenerateSalesVouchers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GenerateSalesVouchers(out string processInfo, string unit_id, string from, string to, string Summary_Flag, string Receivable_Flag, string CallFrom, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_MatchBillandReceivables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_MatchBillandReceivables(out string processInfo, string comp_id, string from, string to, string logic, string ledger_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_ServiceCharges_Audit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_ServiceCharges_Audit(out string processInfo, string from, string to, string prm_1, string prm_2, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_CashinHandWithAppInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_CashinHandWithAppInfo(out string processInfo, string unit_id, string from, string to, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_DiagnosticReceivableSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_DiagnosticReceivableSummary(out string processInfo, string comp_id, string unit_id, string From, string to, string ledger_id, string logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportLedgerFromLedgerMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ImportLedgerFromLedgerMaster(out string processInfo, string unit_id, string ac_code, string logic, string SearchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/App_CashPayment_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string App_CashPayment_Insert(string unit_id, string emp_code, string ledger_Code, decimal amount, string purpose, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AccountsSmallQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccountsSmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AppUnitExpCommRemarkIns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AppUnitExpCommRemarkIns(string ReqId, string remark, string login_id, string emp_code, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SqlToTallyImport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SqlToTallyImport(out string CompanyInfo, string unit_id, string Logic, string from, string to, string prm_1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateGroups(out string processInfo, string code_value, string group_name, string under_CodeValue, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CreateLedgers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateLedgers(out string processInfo, string ld_code, string unit_id, string unit_type, string ledger_name, string groupname, string party_name, string party_address, decimal openAmt, string openType, string PanNo, string TinNo, string InsertLogic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/MergeOrDeleteLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MergeOrDeleteLedger(out string processInfo, string login_id, string unit_id, string ld_code, string ld_codeRepBy, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SetLedgerToDoctor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetLedgerToDoctor(out string processInfo, string d_code, string ld_code, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CrossCheckFinSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CrossCheckFinSummary(out string processInfo, string unit_id, string date, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Daybook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Daybook(string unit_id, string dtFrom, string dtTo, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/CheckLedgerExistance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckLedgerExistance(out string processInfo, string unit_id, string searchString, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Account_BooksInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Account_BooksInfo(out string processInfo, string unit_id, string from, string to, string ledgercode, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_ViewLedgerInfo_ByCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_ViewLedgerInfo_ByCompany(out string processInfo, string comp_id, string from, string to, string ledgercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetLedgerInfoForEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_GetLedgerInfoForEntry(out string processInfo, string unit_id, string vch_type, string ledgerfor, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetVoucherSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_GetVoucherSummary(out string processInfo, string unit_id, string vch_type, string voucher_no, string vch_date, string logic, string login_id, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GetTranCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GetTranCodes(out string processInfo, string unit_id, string dr_ledger, string cr_ledger, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_VoucherPosting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AC_VoucherPosting(out string processInfo, string unit_id, string vch_type, string vch_date, string dr_Ledger, string cr_ledger, decimal amount, string narration, string login_id, string voucher_no, string database, string logic, string GenFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_NewVoucherNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_NewVoucherNo(out string processInfo, string unit_id, string voucher_no, string login_id, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Ac_SmallQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ac_SmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/LedgerMaster_update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LedgerMaster_update(out string processInfo, string unit_id, string Code_Category, string ld_code, string ld_name, decimal opening, string crdr, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ImportSingleLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportSingleLedger(out string processInfo, string unit_id, int code_category, string ld_code, string ld_name, decimal opening, decimal closing, string crdr, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_RebuildBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_RebuildBooks(out string processInfo, string unit_id, string from, string to, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/AC_GenerateBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AC_GenerateBooks(out string processInfo, string unit_id, string from, string to, string ServiceFlag, string Receivable_Flag, string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetQueryResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetQueryResult(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/QueryExecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryExecute(string query, string Database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string Message, string MobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/eDiagnosticSalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet eDiagnosticSalesReport(out string processInfo, string unit_id, string inputDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/DiagnosticSalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DiagnosticSalesReport(out string processInfo, string unit_id, string inputDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Menu_RightsQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Menu_RightsQueries(out string processInfo, string AppName, string emp_code, string element_name, string prm_1, string prm_2, int prm_3, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_Menu_Rights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_Menu_Rights(string AppName, string emp_code, string element_name, string isActive, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Insert_Modify_AttCorrectionReq", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Insert_Modify_AttCorrectionReq(out string processInfo, string unit_id, string emp_code, string att_date, string att_type, string reason, string login_id, string accept_flag, string accept_remark, string Logic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/HR_Queries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HR_Queries(out string processInfo, string comp_id, string logic, string prm_1, string prm_2, string prm_3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetSalarySlipInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/PayableSalaryInfoByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PayableSalaryInfoByDate(string emp_code, string login_id, string salDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateSalaryPaymentInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/UpdateSalaryPaymentInfo_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateSalaryPaymentInfo_New(string emp_code, string trf_date, string payMode, string unit_id, string login_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransactionAtHeadOffice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransactionAtHeadOffice(string trn_type, string pay_type, decimal amount, string login_id, string remarks);
        
        // CODEGEN: Parameter 'data' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/TransferDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        eHRM.rmAccounts.TransferDocumentsResponse TransferDocuments(eHRM.rmAccounts.TransferDocumentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/GetDailySalesReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDailySalesReport(out string processInfo, string From, string to, string Logic, string unit_id, string _database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ServiceCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/Dynamic_ReportQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Dynamic_ReportQueries(out string processInfo, string emp_code, string unit_id, string from, string to, string prm_1, string prm_2, int prm_3, string report_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://exprohelp.com/ReceivableByBusinessHead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ReceivableByBusinessHead(out string processInfo, string emp_code);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Form_SalesPDF", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Form_SalesPDFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public System.Data.DataSet ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string FromTo;
        
        public Form_SalesPDFRequest() {
        }
        
        public Form_SalesPDFRequest(System.Data.DataSet ds, string FromTo) {
            this.ds = ds;
            this.FromTo = FromTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Form_SalesPDFResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Form_SalesPDFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Form_SalesPDFResult;
        
        public Form_SalesPDFResponse() {
        }
        
        public Form_SalesPDFResponse(byte[] Form_SalesPDFResult) {
            this.Form_SalesPDFResult = Form_SalesPDFResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_ComplaintWeb", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Insert_ComplaintWebRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string complcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string remarksby;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string remarks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string logic;
        
        public Insert_ComplaintWebRequest() {
        }
        
        public Insert_ComplaintWebRequest(string complcode, string remarksby, string remarks, decimal amount, byte[] data, string extension, string logic) {
            this.complcode = complcode;
            this.remarksby = remarksby;
            this.remarks = remarks;
            this.amount = amount;
            this.data = data;
            this.extension = extension;
            this.logic = logic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_ComplaintWebResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Insert_ComplaintWebResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Insert_ComplaintWebResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public Insert_ComplaintWebResponse() {
        }
        
        public Insert_ComplaintWebResponse(string Insert_ComplaintWebResult, string processInfo) {
            this.Insert_ComplaintWebResult = Insert_ComplaintWebResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Asset_PurBillUpload", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Asset_PurBillUploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string eqNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string login_id;
        
        public Asset_PurBillUploadRequest() {
        }
        
        public Asset_PurBillUploadRequest(string eqNo, string extension, byte[] data, string login_id) {
            this.eqNo = eqNo;
            this.extension = extension;
            this.data = data;
            this.login_id = login_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Asset_PurBillUploadResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Asset_PurBillUploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Asset_PurBillUploadResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public Asset_PurBillUploadResponse() {
        }
        
        public Asset_PurBillUploadResponse(string Asset_PurBillUploadResult, string processInfo) {
            this.Asset_PurBillUploadResult = Asset_PurBillUploadResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_RadiologyRegistration", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_RadiologyRegistrationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string patient_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string report_history;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Investigation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string workTable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public decimal totalsize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public tr_RadiologyRegistrationRequest() {
        }
        
        public tr_RadiologyRegistrationRequest(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, byte[] data) {
            this.patient_id = patient_id;
            this.report_history = report_history;
            this.Investigation = Investigation;
            this.workTable = workTable;
            this.totalsize = totalsize;
            this.fileName = fileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="tr_RadiologyRegistrationResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class tr_RadiologyRegistrationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string tr_RadiologyRegistrationResult;
        
        public tr_RadiologyRegistrationResponse() {
        }
        
        public tr_RadiologyRegistrationResponse(string tr_RadiologyRegistrationResult) {
            this.tr_RadiologyRegistrationResult = tr_RadiologyRegistrationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_InsertDocumentInfo", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_InsertDocumentInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string UID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string doc_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string doc_remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string Logic;
        
        public GC_InsertDocumentInfoRequest() {
        }
        
        public GC_InsertDocumentInfoRequest(string UID, string doc_id, byte[] data, string extension, string doc_remark, string login_id, string Logic) {
            this.UID = UID;
            this.doc_id = doc_id;
            this.data = data;
            this.extension = extension;
            this.doc_remark = doc_remark;
            this.login_id = login_id;
            this.Logic = Logic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GC_InsertDocumentInfoResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class GC_InsertDocumentInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string GC_InsertDocumentInfoResult;
        
        public GC_InsertDocumentInfoResponse() {
        }
        
        public GC_InsertDocumentInfoResponse(string GC_InsertDocumentInfoResult) {
            this.GC_InsertDocumentInfoResult = GC_InsertDocumentInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_ConversationByDesktopApp", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Insert_ConversationByDesktopAppRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string etype;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string loginid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string recipientIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string cc_tolist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string conversation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public int SubjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public string mail_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=9)]
        public string file_name;
        
        public Insert_ConversationByDesktopAppRequest() {
        }
        
        public Insert_ConversationByDesktopAppRequest(string etype, string loginid, string recipientIds, string cc_tolist, string subject, string conversation, int SubjectId, string mail_type, byte[] data, string file_name) {
            this.etype = etype;
            this.loginid = loginid;
            this.recipientIds = recipientIds;
            this.cc_tolist = cc_tolist;
            this.subject = subject;
            this.conversation = conversation;
            this.SubjectId = SubjectId;
            this.mail_type = mail_type;
            this.data = data;
            this.file_name = file_name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert_ConversationByDesktopAppResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class Insert_ConversationByDesktopAppResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Insert_ConversationByDesktopAppResult;
        
        public Insert_ConversationByDesktopAppResponse() {
        }
        
        public Insert_ConversationByDesktopAppResponse(string Insert_ConversationByDesktopAppResult) {
            this.Insert_ConversationByDesktopAppResult = Insert_ConversationByDesktopAppResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="App_Info_Insert", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class App_Info_InsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string unit_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string main_unit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public int app_Head_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string bill_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public decimal amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        public string login_id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=7)]
        public string app_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=8)]
        public string division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=9)]
        public string doc_name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=10)]
        public string gst_flag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=11)]
        public string gstn_no;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=12)]
        public string bill_no;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=13)]
        public decimal cgst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=14)]
        public decimal sgst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=15)]
        public decimal igst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=16)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public App_Info_InsertRequest() {
        }
        
        public App_Info_InsertRequest(
                    string unit_id, 
                    string main_unit, 
                    int app_Head_Id, 
                    string remark, 
                    string bill_date, 
                    decimal amount, 
                    string login_id, 
                    string app_by, 
                    string division, 
                    string doc_name, 
                    string gst_flag, 
                    string gstn_no, 
                    string bill_no, 
                    decimal cgst, 
                    decimal sgst, 
                    decimal igst, 
                    byte[] data) {
            this.unit_id = unit_id;
            this.main_unit = main_unit;
            this.app_Head_Id = app_Head_Id;
            this.remark = remark;
            this.bill_date = bill_date;
            this.amount = amount;
            this.login_id = login_id;
            this.app_by = app_by;
            this.division = division;
            this.doc_name = doc_name;
            this.gst_flag = gst_flag;
            this.gstn_no = gstn_no;
            this.bill_no = bill_no;
            this.cgst = cgst;
            this.sgst = sgst;
            this.igst = igst;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="App_Info_InsertResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class App_Info_InsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string App_Info_InsertResult;
        
        public App_Info_InsertResponse() {
        }
        
        public App_Info_InsertResponse(string App_Info_InsertResult) {
            this.App_Info_InsertResult = App_Info_InsertResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Path;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(string Path) {
            this.Path = Path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string processInfo;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult, string processInfo) {
            this.DownloadFileResult = DownloadFileResult;
            this.processInfo = processInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocuments", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string Doc_date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string Division;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=2)]
        public string Unit_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=3)]
        public string FinYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=4)]
        public string FileType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=5)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data;
        
        public TransferDocumentsRequest() {
        }
        
        public TransferDocumentsRequest(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data) {
            this.Doc_date = Doc_date;
            this.Division = Division;
            this.Unit_Id = Unit_Id;
            this.FinYear = FinYear;
            this.FileType = FileType;
            this.FileName = FileName;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferDocumentsResponse", WrapperNamespace="http://exprohelp.com/", IsWrapped=true)]
    public partial class TransferDocumentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=0)]
        public string TransferDocumentsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://exprohelp.com/", Order=1)]
        public string msg;
        
        public TransferDocumentsResponse() {
        }
        
        public TransferDocumentsResponse(string TransferDocumentsResult, string msg) {
            this.TransferDocumentsResult = TransferDocumentsResult;
            this.msg = msg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Accounts_WebServiceSoapChannel : eHRM.rmAccounts.Accounts_WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Accounts_WebServiceSoapClient : System.ServiceModel.ClientBase<eHRM.rmAccounts.Accounts_WebServiceSoap>, eHRM.rmAccounts.Accounts_WebServiceSoap {
        
        public Accounts_WebServiceSoapClient() {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Accounts_WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Accounts_WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetMonthlyBalForChecking(out string processInfo, string from, string to, string login_id) {
            return base.Channel.GetMonthlyBalForChecking(out processInfo, from, to, login_id);
        }
        
        public string Insert_Modify_bulk_card_ins_request(string r_cardType, string r_card_no, string r_cust_name, string r_Mobile_no, string r_phone_no, string r_area, string r_locality, string r_district, string r_state, string r_unit_code, string r_login_id, string Logic) {
            return base.Channel.Insert_Modify_bulk_card_ins_request(r_cardType, r_card_no, r_cust_name, r_Mobile_no, r_phone_no, r_area, r_locality, r_district, r_state, r_unit_code, r_login_id, Logic);
        }
        
        public string UpdateIdOfNotCoded(out string processInfo, string d_code, string ArrayRecId, string separator, string status_flag, string remark, string login_id) {
            return base.Channel.UpdateIdOfNotCoded(out processInfo, d_code, ArrayRecId, separator, status_flag, remark, login_id);
        }
        
        public string ReplaceReferral_Work(out string processInfo, string d_code, string ReplBy, string login_id, string result) {
            return base.Channel.ReplaceReferral_Work(out processInfo, d_code, ReplBy, login_id, result);
        }
        
        public System.Data.DataSet VerifyPFInformation(out string processInfo, string ref_code, string Logic, string prm_1) {
            return base.Channel.VerifyPFInformation(out processInfo, ref_code, Logic, prm_1);
        }
        
        public System.Data.DataSet Retail_GetCardInfo(out string processInfo, string unit_id, string searchString) {
            return base.Channel.Retail_GetCardInfo(out processInfo, unit_id, searchString);
        }
        
        public string RemarkAndContactInsertion(out string processInfo, string ref_code, string Logic, string prm_1, string prm_2) {
            return base.Channel.RemarkAndContactInsertion(out processInfo, ref_code, Logic, prm_1, prm_2);
        }
        
        public string ApproveRebateInfo(out string processInfo, string App_id, decimal app_amount, string app_by, string query, string remarks) {
            return base.Channel.ApproveRebateInfo(out processInfo, App_id, app_amount, app_by, query, remarks);
        }
        
        public string AC_MergeLedger(out string processInfo, string logic, string repTo_Ledger_code, string repBy_Ledger_code, string voucher_no, string login_id) {
            return base.Channel.AC_MergeLedger(out processInfo, logic, repTo_Ledger_code, repBy_Ledger_code, voucher_no, login_id);
        }
        
        public string VoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic) {
            return base.Channel.VoucherModifyInfo(out processInfo, unit_id, voucher_no, logic);
        }
        
        public System.Data.DataSet UpdateVoucherModifyInfo(out string processInfo, string unit_id, string voucher_no, string logic) {
            return base.Channel.UpdateVoucherModifyInfo(out processInfo, unit_id, voucher_no, logic);
        }
        
        public System.Data.DataSet GetPatientRegister(out string processInfo, string unit_id, string fromdate, string Logic, string SearchKey) {
            return base.Channel.GetPatientRegister(out processInfo, unit_id, fromdate, Logic, SearchKey);
        }
        
        public string AC_ModifyVoucher(string act_type, string voucher_no, string repTo_Ledger_code, string repBy_Ledger_code, string database) {
            return base.Channel.AC_ModifyVoucher(act_type, voucher_no, repTo_Ledger_code, repBy_Ledger_code, database);
        }
        
        public System.Data.DataSet Account_PurchaseQueries(out string processInfo, string unit_id, string purchase_id, string from, string to, string Logic) {
            return base.Channel.Account_PurchaseQueries(out processInfo, unit_id, purchase_id, from, to, Logic);
        }
        
        public string CorrectInvoiceType(out string processInfo, string unit_id, string purch_id, string inv_type) {
            return base.Channel.CorrectInvoiceType(out processInfo, unit_id, purch_id, inv_type);
        }
        
        public System.Data.DataSet TaxQueries(out string processInfo, string unit_id, string stateName, string logic, string from, string to) {
            return base.Channel.TaxQueries(out processInfo, unit_id, stateName, logic, from, to);
        }
        
        public System.Data.DataSet Pharmacy_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic) {
            return base.Channel.Pharmacy_UnitMismatchInfo(out processInfo, unit_id, from, to, logic);
        }
        
        public System.Data.DataSet Diagnostic_UnitMismatchInfo(out string processInfo, string unit_id, string from, string to, string logic) {
            return base.Channel.Diagnostic_UnitMismatchInfo(out processInfo, unit_id, from, to, logic);
        }
        
        public string Insert_Modify_LedgerLocking(out string processInfo, string ledgerof, string ledger_id, string Logic) {
            return base.Channel.Insert_Modify_LedgerLocking(out processInfo, ledgerof, ledger_id, Logic);
        }
        
        public System.Data.DataSet Form_Sales_UP(out string processInfo, string from, string to) {
            return base.Channel.Form_Sales_UP(out processInfo, from, to);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.Form_SalesPDFResponse eHRM.rmAccounts.Accounts_WebServiceSoap.Form_SalesPDF(eHRM.rmAccounts.Form_SalesPDFRequest request) {
            return base.Channel.Form_SalesPDF(request);
        }
        
        public byte[] Form_SalesPDF(System.Data.DataSet ds, string FromTo) {
            eHRM.rmAccounts.Form_SalesPDFRequest inValue = new eHRM.rmAccounts.Form_SalesPDFRequest();
            inValue.ds = ds;
            inValue.FromTo = FromTo;
            eHRM.rmAccounts.Form_SalesPDFResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).Form_SalesPDF(inValue);
            return retVal.Form_SalesPDFResult;
        }
        
        public string InserteTax_4Det(out string processInfo, int mth, string finyear, string state) {
            return base.Channel.InserteTax_4Det(out processInfo, mth, finyear, state);
        }
        
        public System.Data.DataSet GetMonthlyTax(out string processInfo, int Month, string Fin_year, string Logic) {
            return base.Channel.GetMonthlyTax(out processInfo, Month, Fin_year, Logic);
        }
        
        public string AdjustSales(out string processInfo, string from, string to, string state, string login_id, decimal Reduce, string result) {
            return base.Channel.AdjustSales(out processInfo, from, to, state, login_id, Reduce, result);
        }
        
        public System.Data.DataSet Ac_GetReceivableSummary(out string processInfo, string Comp_id, string unit_id, string from, string to) {
            return base.Channel.Ac_GetReceivableSummary(out processInfo, Comp_id, unit_id, from, to);
        }
        
        public System.Data.DataSet DiagnosticReceivableSummary(out string processInfo, string comp_id, string unit_id, string From, string to, string ledger_id, string logic) {
            return base.Channel.DiagnosticReceivableSummary(out processInfo, comp_id, unit_id, From, to, ledger_id, logic);
        }
        
        public System.Data.DataSet ShopInfo_Queries(out string processInfo, string unit_id, string logic, string prm_1, string prm_2, string login_id) {
            return base.Channel.ShopInfo_Queries(out processInfo, unit_id, logic, prm_1, prm_2, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.Insert_ComplaintWebResponse eHRM.rmAccounts.Accounts_WebServiceSoap.Insert_ComplaintWeb(eHRM.rmAccounts.Insert_ComplaintWebRequest request) {
            return base.Channel.Insert_ComplaintWeb(request);
        }
        
        public string Insert_ComplaintWeb(string complcode, string remarksby, string remarks, decimal amount, byte[] data, string extension, string logic, out string processInfo) {
            eHRM.rmAccounts.Insert_ComplaintWebRequest inValue = new eHRM.rmAccounts.Insert_ComplaintWebRequest();
            inValue.complcode = complcode;
            inValue.remarksby = remarksby;
            inValue.remarks = remarks;
            inValue.amount = amount;
            inValue.data = data;
            inValue.extension = extension;
            inValue.logic = logic;
            eHRM.rmAccounts.Insert_ComplaintWebResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).Insert_ComplaintWeb(inValue);
            processInfo = retVal.processInfo;
            return retVal.Insert_ComplaintWebResult;
        }
        
        public string GenNewEqCode(string eq_cat, string pur_date) {
            return base.Channel.GenNewEqCode(eq_cat, pur_date);
        }
        
        public string Ins_equip_info(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string asset_type, 
                    string result) {
            return base.Channel.Ins_equip_info(out processInfo, unit_id, v_code, eq_code, eq_cat_code, eq_description, eq_serial_no, pur_date, pur_billno, w_date, w_detail, mainEuipNo, eq_no, crBy, eq_amount, asset_type, result);
        }
        
        public string Ins_equip_info_New(
                    out string processInfo, 
                    string unit_id, 
                    string v_code, 
                    string eq_code, 
                    string eq_cat_code, 
                    string eq_description, 
                    string eq_serial_no, 
                    string pur_date, 
                    string pur_billno, 
                    string w_date, 
                    string w_detail, 
                    string mainEuipNo, 
                    string eq_no, 
                    string crBy, 
                    decimal eq_amount, 
                    string asset_type, 
                    string po_no, 
                    string result) {
            return base.Channel.Ins_equip_info_New(out processInfo, unit_id, v_code, eq_code, eq_cat_code, eq_description, eq_serial_no, pur_date, pur_billno, w_date, w_detail, mainEuipNo, eq_no, crBy, eq_amount, asset_type, po_no, result);
        }
        
        public System.Data.DataSet Asset_Querries(out string processInfo, string eq_code, string prm_1, string prm_2, string Logic, string login_id) {
            return base.Channel.Asset_Querries(out processInfo, eq_code, prm_1, prm_2, Logic, login_id);
        }
        
        public string DeleteOrDisableAssets(string EqNo, string login_id) {
            return base.Channel.DeleteOrDisableAssets(EqNo, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.Asset_PurBillUploadResponse eHRM.rmAccounts.Accounts_WebServiceSoap.Asset_PurBillUpload(eHRM.rmAccounts.Asset_PurBillUploadRequest request) {
            return base.Channel.Asset_PurBillUpload(request);
        }
        
        public string Asset_PurBillUpload(string eqNo, string extension, byte[] data, string login_id, out string processInfo) {
            eHRM.rmAccounts.Asset_PurBillUploadRequest inValue = new eHRM.rmAccounts.Asset_PurBillUploadRequest();
            inValue.eqNo = eqNo;
            inValue.extension = extension;
            inValue.data = data;
            inValue.login_id = login_id;
            eHRM.rmAccounts.Asset_PurBillUploadResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).Asset_PurBillUpload(inValue);
            processInfo = retVal.processInfo;
            return retVal.Asset_PurBillUploadResult;
        }
        
        public string TransferAsset(out string processInfo, string trfFrom, string trfTo, string emp_code, string eq_no, string trfType, string trf_date, decimal dpr_value) {
            return base.Channel.TransferAsset(out processInfo, trfFrom, trfTo, emp_code, eq_no, trfType, trf_date, dpr_value);
        }
        
        public string Vendor_master(out string processInfo, string v_type, string v_code, string v_name, string Contact_Person, string address, string district, string state, string Country, string ContactNo, string result) {
            return base.Channel.Vendor_master(out processInfo, v_type, v_code, v_name, Contact_Person, address, district, state, Country, ContactNo, result);
        }
        
        public System.Data.DataSet fillState() {
            return base.Channel.fillState();
        }
        
        public System.Data.DataSet fillDistrict(string state_code) {
            return base.Channel.fillDistrict(state_code);
        }
        
        public System.Data.DataSet InformToeDiagnostic(out string processInfo, string unit_id, decimal revision_no) {
            return base.Channel.InformToeDiagnostic(out processInfo, unit_id, revision_no);
        }
        
        public string ins_investd(
                    out string processInfo, 
                    string ratefor, 
                    string i_code, 
                    string investi, 
                    int rate, 
                    string lab_section, 
                    decimal unit, 
                    string instruction, 
                    string forapp, 
                    string workingtable, 
                    string normalrange, 
                    string dr_fee, 
                    string rep_head, 
                    string typeoftest, 
                    string vial, 
                    string sam_qty, 
                    string ser_charges) {
            return base.Channel.ins_investd(out processInfo, ratefor, i_code, investi, rate, lab_section, unit, instruction, forapp, workingtable, normalrange, dr_fee, rep_head, typeoftest, vial, sam_qty, ser_charges);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.tr_RadiologyRegistrationResponse eHRM.rmAccounts.Accounts_WebServiceSoap.tr_RadiologyRegistration(eHRM.rmAccounts.tr_RadiologyRegistrationRequest request) {
            return base.Channel.tr_RadiologyRegistration(request);
        }
        
        public string tr_RadiologyRegistration(string patient_id, string report_history, string Investigation, string workTable, decimal totalsize, string fileName, byte[] data) {
            eHRM.rmAccounts.tr_RadiologyRegistrationRequest inValue = new eHRM.rmAccounts.tr_RadiologyRegistrationRequest();
            inValue.patient_id = patient_id;
            inValue.report_history = report_history;
            inValue.Investigation = Investigation;
            inValue.workTable = workTable;
            inValue.totalsize = totalsize;
            inValue.fileName = fileName;
            inValue.data = data;
            eHRM.rmAccounts.tr_RadiologyRegistrationResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).tr_RadiologyRegistration(inValue);
            return retVal.tr_RadiologyRegistrationResult;
        }
        
        public System.Data.DataSet BillPaymentChecking(out string processInfo, string unit_id, string ref_by, string dFrom, string dTo, string checkbill) {
            return base.Channel.BillPaymentChecking(out processInfo, unit_id, ref_by, dFrom, dTo, checkbill);
        }
        
        public string ShiftSchedule_Bulk(string old_login, string new_login, string sch_date, string bulk_by) {
            return base.Channel.ShiftSchedule_Bulk(old_login, new_login, sch_date, bulk_by);
        }
        
        public System.Data.DataSet WorkBook(out string processInfo, string hosp_id, string from, string to, string logic, string prm_1, string prm_2) {
            return base.Channel.WorkBook(out processInfo, hosp_id, from, to, logic, prm_1, prm_2);
        }
        
        public string Insert_Modify_Client_Master(
                    string unit_id, 
                    string slab_id, 
                    string client_id, 
                    string client_type, 
                    string client_name, 
                    string mobile_no, 
                    string phone_no, 
                    string add1, 
                    string add2, 
                    string email_id, 
                    string state, 
                    string district, 
                    string country, 
                    string pan_no, 
                    string cst_no, 
                    string service_tax_no, 
                    string credit_flag, 
                    decimal credit_limit, 
                    int credit_days, 
                    string tax_flag, 
                    string cStatus, 
                    string Logic, 
                    string login_id, 
                    string login_rights, 
                    string HouseFlatNo, 
                    string pin_no, 
                    string rep_header, 
                    string rep_address, 
                    string rep_contact_no, 
                    string dr1, 
                    string dr2, 
                    string dr3) {
            return base.Channel.Insert_Modify_Client_Master(unit_id, slab_id, client_id, client_type, client_name, mobile_no, phone_no, add1, add2, email_id, state, district, country, pan_no, cst_no, service_tax_no, credit_flag, credit_limit, credit_days, tax_flag, cStatus, Logic, login_id, login_rights, HouseFlatNo, pin_no, rep_header, rep_address, rep_contact_no, dr1, dr2, dr3);
        }
        
        public System.Data.DataSet Client_Querries(out string processInfo, string slab_id, string client_id, string prm_1, string prm_2, string logic) {
            return base.Channel.Client_Querries(out processInfo, slab_id, client_id, prm_1, prm_2, logic);
        }
        
        public string Insert_SpecContractApproval(string client_id, string i_code, int app_rate, string cont_from, string cont_to, string app_flag, string logic, string login_id) {
            return base.Channel.Insert_SpecContractApproval(client_id, i_code, app_rate, cont_from, cont_to, app_flag, logic, login_id);
        }
        
        public string InsertSpecialityPayment_Info(string unit_id, string bill_no, string client_id, string PayMode, decimal amount, string chq_draft_no, string bank_name, string narration, string login_id, string AdvAdj_Flag, decimal AdvAdj_amt, string acc_narration, string Logic) {
            return base.Channel.InsertSpecialityPayment_Info(unit_id, bill_no, client_id, PayMode, amount, chq_draft_no, bank_name, narration, login_id, AdvAdj_Flag, AdvAdj_amt, acc_narration, Logic);
        }
        
        public System.Data.DataSet SpecialityBilling_Queries(out string processInfo, string unit_id, string reg_no, string prm_1, string prm_2, string from, string to, string Logic) {
            return base.Channel.SpecialityBilling_Queries(out processInfo, unit_id, reg_no, prm_1, prm_2, from, to, Logic);
        }
        
        public string Folio_master_Ins(
                    string comp_id, 
                    string upFolio_No, 
                    string Category, 
                    string Sh_Holder_Name, 
                    string Father_Name, 
                    string Area, 
                    string State, 
                    string district, 
                    string mobile, 
                    string eMail, 
                    string nominee, 
                    string PAN_NO, 
                    string ifscCode, 
                    string bankAc, 
                    string logic, 
                    string login_id) {
            return base.Channel.Folio_master_Ins(comp_id, upFolio_No, Category, Sh_Holder_Name, Father_Name, Area, State, district, mobile, eMail, nominee, PAN_NO, ifscCode, bankAc, logic, login_id);
        }
        
        public string Insert_Modify_New_App_info(string app_id, string comp_id, string app_date, string folio_no, int NoS, int psv, int pr_amt, decimal amount, string MoP, string Chq_Drft_No, string Chq_Drft_date, string drwan_on, string alt_flag, string alt_date, string Logic) {
            return base.Channel.Insert_Modify_New_App_info(app_id, comp_id, app_date, folio_no, NoS, psv, pr_amt, amount, MoP, Chq_Drft_No, Chq_Drft_date, drwan_on, alt_flag, alt_date, Logic);
        }
        
        public System.Data.DataSet Share_Queries(out string processInfo, string comp_id, string login_id, string logic, string prm_1, string prm_2, string prm_3, string prm_4) {
            return base.Channel.Share_Queries(out processInfo, comp_id, login_id, logic, prm_1, prm_2, prm_3, prm_4);
        }
        
        public string ShareAllotmentProcess(out string processInfo, string comp_id, string folio_no, string app_id, string logic, string login_id) {
            return base.Channel.ShareAllotmentProcess(out processInfo, comp_id, folio_no, app_id, logic, login_id);
        }
        
        public string Insert_Modify_HI_CoupanMaster(string client_id, int Coupan_all_from, int Coupan_all_to, string emp_code, string Logic, string HIC_type) {
            return base.Channel.Insert_Modify_HI_CoupanMaster(client_id, Coupan_all_from, Coupan_all_to, emp_code, Logic, HIC_type);
        }
        
        public string GC_InsertMasterDetail(out string processInfo, string UID, string unit_id, string reg_no, string reg_date, string valid_upto, string Comp_Id, string breif_detail, string Remarks, string Logic, string login_id) {
            return base.Channel.GC_InsertMasterDetail(out processInfo, UID, unit_id, reg_no, reg_date, valid_upto, Comp_Id, breif_detail, Remarks, Logic, login_id);
        }
        
        public string GC_InsertMachineInfo(int auto_id, string eq_no, string UID, string Logic, string login_id) {
            return base.Channel.GC_InsertMachineInfo(auto_id, eq_no, UID, Logic, login_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.GC_InsertDocumentInfoResponse eHRM.rmAccounts.Accounts_WebServiceSoap.GC_InsertDocumentInfo(eHRM.rmAccounts.GC_InsertDocumentInfoRequest request) {
            return base.Channel.GC_InsertDocumentInfo(request);
        }
        
        public string GC_InsertDocumentInfo(string UID, string doc_id, byte[] data, string extension, string doc_remark, string login_id, string Logic) {
            eHRM.rmAccounts.GC_InsertDocumentInfoRequest inValue = new eHRM.rmAccounts.GC_InsertDocumentInfoRequest();
            inValue.UID = UID;
            inValue.doc_id = doc_id;
            inValue.data = data;
            inValue.extension = extension;
            inValue.doc_remark = doc_remark;
            inValue.login_id = login_id;
            inValue.Logic = Logic;
            eHRM.rmAccounts.GC_InsertDocumentInfoResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).GC_InsertDocumentInfo(inValue);
            return retVal.GC_InsertDocumentInfoResult;
        }
        
        public string GC_InsertEmpDetail(string UID, string emp_code, string login_id, string Logic) {
            return base.Channel.GC_InsertEmpDetail(UID, emp_code, login_id, Logic);
        }
        
        public System.Data.DataSet GC_MISQueries(out string processInfo, string UID, string from, string to, string prm_1, string prm_2, string Logic) {
            return base.Channel.GC_MISQueries(out processInfo, UID, from, to, prm_1, prm_2, Logic);
        }
        
        public System.Data.DataSet ICICI_SalaryTransfer_Formate(out string processInfo, string inp_date, string div, string prm_1, string prm_2, string prm_3, string Logic, string icic_acc) {
            return base.Channel.ICICI_SalaryTransfer_Formate(out processInfo, inp_date, div, prm_1, prm_2, prm_3, Logic, icic_acc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.Insert_ConversationByDesktopAppResponse eHRM.rmAccounts.Accounts_WebServiceSoap.Insert_ConversationByDesktopApp(eHRM.rmAccounts.Insert_ConversationByDesktopAppRequest request) {
            return base.Channel.Insert_ConversationByDesktopApp(request);
        }
        
        public string Insert_ConversationByDesktopApp(string etype, string loginid, string recipientIds, string cc_tolist, string subject, string conversation, int SubjectId, string mail_type, byte[] data, string file_name) {
            eHRM.rmAccounts.Insert_ConversationByDesktopAppRequest inValue = new eHRM.rmAccounts.Insert_ConversationByDesktopAppRequest();
            inValue.etype = etype;
            inValue.loginid = loginid;
            inValue.recipientIds = recipientIds;
            inValue.cc_tolist = cc_tolist;
            inValue.subject = subject;
            inValue.conversation = conversation;
            inValue.SubjectId = SubjectId;
            inValue.mail_type = mail_type;
            inValue.data = data;
            inValue.file_name = file_name;
            eHRM.rmAccounts.Insert_ConversationByDesktopAppResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).Insert_ConversationByDesktopApp(inValue);
            return retVal.Insert_ConversationByDesktopAppResult;
        }
        
        public System.Data.DataSet GetWorkingStaffList(string division, string unit_name, string district, string comp_code, string action) {
            return base.Channel.GetWorkingStaffList(division, unit_name, district, comp_code, action);
        }
        
        public string AttendanceMarkingByDate(string parameter, string pMcode) {
            return base.Channel.AttendanceMarkingByDate(parameter, pMcode);
        }
        
        public string AttendanceMarking(string parameter, string pMcode) {
            return base.Channel.AttendanceMarking(parameter, pMcode);
        }
        
        public string ChangePassword(string empCode, string oldPass, string newPass) {
            return base.Channel.ChangePassword(empCode, oldPass, newPass);
        }
        
        public System.Data.DataSet GetEmpSalaryLedgers(out string processInfo, string unit_id) {
            return base.Channel.GetEmpSalaryLedgers(out processInfo, unit_id);
        }
        
        public System.Data.DataSet MarkIndvAttandence(out string processInfo, string empCode, string dateOfB) {
            return base.Channel.MarkIndvAttandence(out processInfo, empCode, dateOfB);
        }
        
        public System.Data.DataSet Mac_Queries(out string processInfo, string from, string to, string prm_1, string prm_2, string Logic) {
            return base.Channel.Mac_Queries(out processInfo, from, to, prm_1, prm_2, Logic);
        }
        
        public string Insert_Modify_TrainingMaster(out string processInfo, string trainingId, string appname, string app_version, string training_point, string trained_flag, string Logic) {
            return base.Channel.Insert_Modify_TrainingMaster(out processInfo, trainingId, appname, app_version, training_point, trained_flag, Logic);
        }
        
        public string Insert_Modify_TrainingInfo(out string processInfo, string trainingId, string unit_id, string trained_by, string trained_to, string remark, string tr_flag, int rating, string Logic) {
            return base.Channel.Insert_Modify_TrainingInfo(out processInfo, trainingId, unit_id, trained_by, trained_to, remark, tr_flag, rating, Logic);
        }
        
        public System.Data.DataSet Training_Queries(out string processInfo, string unit_id, string app_name, string trainingId, string prm_1, string from, string to, string Logic) {
            return base.Channel.Training_Queries(out processInfo, unit_id, app_name, trainingId, prm_1, from, to, Logic);
        }
        
        public string Insert_Modify_Cust_Comm_Info(out string processInfo, string unit_id, string bill_No, string cust_name, string doc_type, string msg_flag, string msg_text, string doc_path, string Logic) {
            return base.Channel.Insert_Modify_Cust_Comm_Info(out processInfo, unit_id, bill_No, cust_name, doc_type, msg_flag, msg_text, doc_path, Logic);
        }
        
        public string AuthenticateLogin(string unit_id, string login_id, string password, string accessFrom, string systemId, string database) {
            return base.Channel.AuthenticateLogin(unit_id, login_id, password, accessFrom, systemId, database);
        }
        
        public string Insert_Modify_MacInfo(string unit_id, string mac_address, string emp_code, string app_name, string workStation, string App_version, string App_Flag, string UpdateRemark) {
            return base.Channel.Insert_Modify_MacInfo(unit_id, mac_address, emp_code, app_name, workStation, App_version, App_Flag, UpdateRemark);
        }
        
        public string InsAdvanceSalayInfo(string unit_id, string emp_code, decimal adv_amount, string login_id, string reason) {
            return base.Channel.InsAdvanceSalayInfo(unit_id, emp_code, adv_amount, login_id, reason);
        }
        
        public string InsAdvanceSalayInfo_withAdjustment(string unit_id, string emp_code, decimal adv_amount, string adjDate, string login_id, string reason) {
            return base.Channel.InsAdvanceSalayInfo_withAdjustment(unit_id, emp_code, adv_amount, adjDate, login_id, reason);
        }
        
        public System.Data.DataSet AdvSalayInfo(out string processInfo, string mgr_code, string emp_code, string Logic) {
            return base.Channel.AdvSalayInfo(out processInfo, mgr_code, emp_code, Logic);
        }
        
        public string InsAdvSalayInfo_Bulk(System.Data.DataSet ds, string login_id, string bulk_import_id) {
            return base.Channel.InsAdvSalayInfo_Bulk(ds, login_id, bulk_import_id);
        }
        
        public System.Data.DataSet GetApprovalInfo(out string processInfo, string ReqId, string login_id, string logic) {
            return base.Channel.GetApprovalInfo(out processInfo, ReqId, login_id, logic);
        }
        
        public System.Data.DataSet ApprovalsPopup(out string processInfo, string login_id, string logic) {
            return base.Channel.ApprovalsPopup(out processInfo, login_id, logic);
        }
        
        public System.Data.DataSet AccountFromToDateQuery(out string processInfo, string unit_id, string login_id, string prm_1, string logic, string from, string to) {
            return base.Channel.AccountFromToDateQuery(out processInfo, unit_id, login_id, prm_1, logic, from, to);
        }
        
        public string DeleteApproval(out string processInfo, int auto_id) {
            return base.Channel.DeleteApproval(out processInfo, auto_id);
        }
        
        public System.Data.DataSet Expense_Queries(out string processInfo, string logic, string unit_id, string app_id, string from, string to, string login_id) {
            return base.Channel.Expense_Queries(out processInfo, logic, unit_id, app_id, from, to, login_id);
        }
        
        public System.Data.DataSet App_CashPayment_Queries(out string processInfo, string unit_id, string app_id, string logic, string login_id, string psw) {
            return base.Channel.App_CashPayment_Queries(out processInfo, unit_id, app_id, logic, login_id, psw);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.App_Info_InsertResponse eHRM.rmAccounts.Accounts_WebServiceSoap.App_Info_Insert(eHRM.rmAccounts.App_Info_InsertRequest request) {
            return base.Channel.App_Info_Insert(request);
        }
        
        public string App_Info_Insert(
                    string unit_id, 
                    string main_unit, 
                    int app_Head_Id, 
                    string remark, 
                    string bill_date, 
                    decimal amount, 
                    string login_id, 
                    string app_by, 
                    string division, 
                    string doc_name, 
                    string gst_flag, 
                    string gstn_no, 
                    string bill_no, 
                    decimal cgst, 
                    decimal sgst, 
                    decimal igst, 
                    byte[] data) {
            eHRM.rmAccounts.App_Info_InsertRequest inValue = new eHRM.rmAccounts.App_Info_InsertRequest();
            inValue.unit_id = unit_id;
            inValue.main_unit = main_unit;
            inValue.app_Head_Id = app_Head_Id;
            inValue.remark = remark;
            inValue.bill_date = bill_date;
            inValue.amount = amount;
            inValue.login_id = login_id;
            inValue.app_by = app_by;
            inValue.division = division;
            inValue.doc_name = doc_name;
            inValue.gst_flag = gst_flag;
            inValue.gstn_no = gstn_no;
            inValue.bill_no = bill_no;
            inValue.cgst = cgst;
            inValue.sgst = sgst;
            inValue.igst = igst;
            inValue.data = data;
            eHRM.rmAccounts.App_Info_InsertResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).App_Info_Insert(inValue);
            return retVal.App_Info_InsertResult;
        }
        
        public string ImportExpenses_ByUnit(string unit_id, string app_id, string narration, string loginid) {
            return base.Channel.ImportExpenses_ByUnit(unit_id, app_id, narration, loginid);
        }
        
        public System.Data.DataSet AssetsName(out string processInfo, string asset_id) {
            return base.Channel.AssetsName(out processInfo, asset_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.DownloadFileResponse eHRM.rmAccounts.Accounts_WebServiceSoap.DownloadFile(eHRM.rmAccounts.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public byte[] DownloadFile(string Path, out string processInfo) {
            eHRM.rmAccounts.DownloadFileRequest inValue = new eHRM.rmAccounts.DownloadFileRequest();
            inValue.Path = Path;
            eHRM.rmAccounts.DownloadFileResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).DownloadFile(inValue);
            processInfo = retVal.processInfo;
            return retVal.DownloadFileResult;
        }
        
        public System.Data.DataSet ApproveRebate_queries(out string processInfo, string App_Id, string prm_1, string logic) {
            return base.Channel.ApproveRebate_queries(out processInfo, App_Id, prm_1, logic);
        }
        
        public string ApproveNewVendor(out string processInfo, int autoid, string login_id) {
            return base.Channel.ApproveNewVendor(out processInfo, autoid, login_id);
        }
        
        public string ReCalculateDailyPf(out string processInfo, string patient_id, string test_code) {
            return base.Channel.ReCalculateDailyPf(out processInfo, patient_id, test_code);
        }
        
        public System.Data.DataSet VerifyIncConfirmation(out string processInfo, string ref_code, string Logic, string from, string To) {
            return base.Channel.VerifyIncConfirmation(out processInfo, ref_code, Logic, from, To);
        }
        
        public string InsertRemarkOfReferral(out string processInfo, string ref_code, string Logic, string remark, string login_id, string ByApp, string prm_1, string result) {
            return base.Channel.InsertRemarkOfReferral(out processInfo, ref_code, Logic, remark, login_id, ByApp, prm_1, result);
        }
        
        public string CalculateMonthlyPF(out string processInfo, string d_code, string mthInfo) {
            return base.Channel.CalculateMonthlyPF(out processInfo, d_code, mthInfo);
        }
        
        public System.Data.DataSet AC_Audit_CSL_CashTrfByUnit(out string processInfo, string from, string to) {
            return base.Channel.AC_Audit_CSL_CashTrfByUnit(out processInfo, from, to);
        }
        
        public string AC_GenerateSalesVouchers(out string processInfo, string unit_id, string from, string to, string Summary_Flag, string Receivable_Flag, string CallFrom, string login_id) {
            return base.Channel.AC_GenerateSalesVouchers(out processInfo, unit_id, from, to, Summary_Flag, Receivable_Flag, CallFrom, login_id);
        }
        
        public System.Data.DataSet Ac_MatchBillandReceivables(out string processInfo, string comp_id, string from, string to, string logic, string ledger_id) {
            return base.Channel.Ac_MatchBillandReceivables(out processInfo, comp_id, from, to, logic, ledger_id);
        }
        
        public System.Data.DataSet AC_ServiceCharges_Audit(out string processInfo, string from, string to, string prm_1, string prm_2, string logic) {
            return base.Channel.AC_ServiceCharges_Audit(out processInfo, from, to, prm_1, prm_2, logic);
        }
        
        public System.Data.DataSet Ac_CashinHandWithAppInfo(out string processInfo, string unit_id, string from, string to, string logic) {
            return base.Channel.Ac_CashinHandWithAppInfo(out processInfo, unit_id, from, to, logic);
        }
        
        public System.Data.DataSet AC_DiagnosticReceivableSummary(out string processInfo, string comp_id, string unit_id, string From, string to, string ledger_id, string logic) {
            return base.Channel.AC_DiagnosticReceivableSummary(out processInfo, comp_id, unit_id, From, to, ledger_id, logic);
        }
        
        public System.Data.DataSet ImportLedgerFromLedgerMaster(out string processInfo, string unit_id, string ac_code, string logic, string SearchKey) {
            return base.Channel.ImportLedgerFromLedgerMaster(out processInfo, unit_id, ac_code, logic, SearchKey);
        }
        
        public string App_CashPayment_Insert(string unit_id, string emp_code, string ledger_Code, decimal amount, string purpose, string login_id) {
            return base.Channel.App_CashPayment_Insert(unit_id, emp_code, ledger_Code, amount, purpose, login_id);
        }
        
        public System.Data.DataSet AccountsSmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2) {
            return base.Channel.AccountsSmallQueries(out processInfo, login_id, unit_id, logic, prm_1, prm_2);
        }
        
        public string AppUnitExpCommRemarkIns(string ReqId, string remark, string login_id, string emp_code, string result) {
            return base.Channel.AppUnitExpCommRemarkIns(ReqId, remark, login_id, emp_code, result);
        }
        
        public System.Data.DataSet SqlToTallyImport(out string CompanyInfo, string unit_id, string Logic, string from, string to, string prm_1) {
            return base.Channel.SqlToTallyImport(out CompanyInfo, unit_id, Logic, from, to, prm_1);
        }
        
        public string CreateGroups(out string processInfo, string code_value, string group_name, string under_CodeValue, string Logic) {
            return base.Channel.CreateGroups(out processInfo, code_value, group_name, under_CodeValue, Logic);
        }
        
        public string CreateLedgers(out string processInfo, string ld_code, string unit_id, string unit_type, string ledger_name, string groupname, string party_name, string party_address, decimal openAmt, string openType, string PanNo, string TinNo, string InsertLogic) {
            return base.Channel.CreateLedgers(out processInfo, ld_code, unit_id, unit_type, ledger_name, groupname, party_name, party_address, openAmt, openType, PanNo, TinNo, InsertLogic);
        }
        
        public string MergeOrDeleteLedger(out string processInfo, string login_id, string unit_id, string ld_code, string ld_codeRepBy, string Logic) {
            return base.Channel.MergeOrDeleteLedger(out processInfo, login_id, unit_id, ld_code, ld_codeRepBy, Logic);
        }
        
        public string SetLedgerToDoctor(out string processInfo, string d_code, string ld_code, string login_id) {
            return base.Channel.SetLedgerToDoctor(out processInfo, d_code, ld_code, login_id);
        }
        
        public string CrossCheckFinSummary(out string processInfo, string unit_id, string date, string database) {
            return base.Channel.CrossCheckFinSummary(out processInfo, unit_id, date, database);
        }
        
        public System.Data.DataSet Daybook(string unit_id, string dtFrom, string dtTo, string database) {
            return base.Channel.Daybook(unit_id, dtFrom, dtTo, database);
        }
        
        public string CheckLedgerExistance(out string processInfo, string unit_id, string searchString, string database) {
            return base.Channel.CheckLedgerExistance(out processInfo, unit_id, searchString, database);
        }
        
        public System.Data.DataSet Account_BooksInfo(out string processInfo, string unit_id, string from, string to, string ledgercode, string database) {
            return base.Channel.Account_BooksInfo(out processInfo, unit_id, from, to, ledgercode, database);
        }
        
        public System.Data.DataSet AC_ViewLedgerInfo_ByCompany(out string processInfo, string comp_id, string from, string to, string ledgercode) {
            return base.Channel.AC_ViewLedgerInfo_ByCompany(out processInfo, comp_id, from, to, ledgercode);
        }
        
        public System.Data.DataSet AC_GetLedgerInfoForEntry(out string processInfo, string unit_id, string vch_type, string ledgerfor, string database) {
            return base.Channel.AC_GetLedgerInfoForEntry(out processInfo, unit_id, vch_type, ledgerfor, database);
        }
        
        public System.Data.DataSet AC_GetVoucherSummary(out string processInfo, string unit_id, string vch_type, string voucher_no, string vch_date, string logic, string login_id, string database) {
            return base.Channel.AC_GetVoucherSummary(out processInfo, unit_id, vch_type, voucher_no, vch_date, logic, login_id, database);
        }
        
        public string AC_GetTranCodes(out string processInfo, string unit_id, string dr_ledger, string cr_ledger, string database) {
            return base.Channel.AC_GetTranCodes(out processInfo, unit_id, dr_ledger, cr_ledger, database);
        }
        
        public System.Data.DataSet AC_VoucherPosting(out string processInfo, string unit_id, string vch_type, string vch_date, string dr_Ledger, string cr_ledger, decimal amount, string narration, string login_id, string voucher_no, string database, string logic, string GenFrom) {
            return base.Channel.AC_VoucherPosting(out processInfo, unit_id, vch_type, vch_date, dr_Ledger, cr_ledger, amount, narration, login_id, voucher_no, database, logic, GenFrom);
        }
        
        public string AC_NewVoucherNo(out string processInfo, string unit_id, string voucher_no, string login_id, string database) {
            return base.Channel.AC_NewVoucherNo(out processInfo, unit_id, voucher_no, login_id, database);
        }
        
        public System.Data.DataSet Ac_SmallQueries(out string processInfo, string login_id, string unit_id, string logic, string prm_1, string prm_2, string database) {
            return base.Channel.Ac_SmallQueries(out processInfo, login_id, unit_id, logic, prm_1, prm_2, database);
        }
        
        public string LedgerMaster_update(out string processInfo, string unit_id, string Code_Category, string ld_code, string ld_name, decimal opening, string crdr, string database) {
            return base.Channel.LedgerMaster_update(out processInfo, unit_id, Code_Category, ld_code, ld_name, opening, crdr, database);
        }
        
        public string ImportSingleLedger(out string processInfo, string unit_id, int code_category, string ld_code, string ld_name, decimal opening, decimal closing, string crdr, string database) {
            return base.Channel.ImportSingleLedger(out processInfo, unit_id, code_category, ld_code, ld_name, opening, closing, crdr, database);
        }
        
        public string AC_RebuildBooks(out string processInfo, string unit_id, string from, string to, string database) {
            return base.Channel.AC_RebuildBooks(out processInfo, unit_id, from, to, database);
        }
        
        public string AC_GenerateBooks(out string processInfo, string unit_id, string from, string to, string ServiceFlag, string Receivable_Flag, string database) {
            return base.Channel.AC_GenerateBooks(out processInfo, unit_id, from, to, ServiceFlag, Receivable_Flag, database);
        }
        
        public System.Data.DataSet GetQueryResult(string query, string Database) {
            return base.Channel.GetQueryResult(query, Database);
        }
        
        public string QueryExecute(string query, string Database) {
            return base.Channel.QueryExecute(query, Database);
        }
        
        public string SendSMS(string Message, string MobileNo) {
            return base.Channel.SendSMS(Message, MobileNo);
        }
        
        public System.Data.DataSet eDiagnosticSalesReport(out string processInfo, string unit_id, string inputDate) {
            return base.Channel.eDiagnosticSalesReport(out processInfo, unit_id, inputDate);
        }
        
        public System.Data.DataSet DiagnosticSalesReport(out string processInfo, string unit_id, string inputDate) {
            return base.Channel.DiagnosticSalesReport(out processInfo, unit_id, inputDate);
        }
        
        public System.Data.DataSet Menu_RightsQueries(out string processInfo, string AppName, string emp_code, string element_name, string prm_1, string prm_2, int prm_3, string Logic) {
            return base.Channel.Menu_RightsQueries(out processInfo, AppName, emp_code, element_name, prm_1, prm_2, prm_3, Logic);
        }
        
        public string Insert_Modify_Menu_Rights(string AppName, string emp_code, string element_name, string isActive, string login_id) {
            return base.Channel.Insert_Modify_Menu_Rights(AppName, emp_code, element_name, isActive, login_id);
        }
        
        public string Insert_Modify_AttCorrectionReq(out string processInfo, string unit_id, string emp_code, string att_date, string att_type, string reason, string login_id, string accept_flag, string accept_remark, string Logic) {
            return base.Channel.Insert_Modify_AttCorrectionReq(out processInfo, unit_id, emp_code, att_date, att_type, reason, login_id, accept_flag, accept_remark, Logic);
        }
        
        public System.Data.DataSet HR_Queries(out string processInfo, string comp_id, string logic, string prm_1, string prm_2, string prm_3) {
            return base.Channel.HR_Queries(out processInfo, comp_id, logic, prm_1, prm_2, prm_3);
        }
        
        public System.Data.DataSet GetSalarySlipInfo(string Unit_Id, string Login_id, string salDate, string empcode) {
            return base.Channel.GetSalarySlipInfo(Unit_Id, Login_id, salDate, empcode);
        }
        
        public System.Data.DataSet PayableSalaryInfoByDate(string emp_code, string login_id, string salDate) {
            return base.Channel.PayableSalaryInfoByDate(emp_code, login_id, salDate);
        }
        
        public string UpdateSalaryPaymentInfo(string emp_code, string trf_date, string payMode, string unit_id, string login_id) {
            return base.Channel.UpdateSalaryPaymentInfo(emp_code, trf_date, payMode, unit_id, login_id);
        }
        
        public string UpdateSalaryPaymentInfo_New(string emp_code, string trf_date, string payMode, string unit_id, string login_id) {
            return base.Channel.UpdateSalaryPaymentInfo_New(emp_code, trf_date, payMode, unit_id, login_id);
        }
        
        public string TransactionAtHeadOffice(string trn_type, string pay_type, decimal amount, string login_id, string remarks) {
            return base.Channel.TransactionAtHeadOffice(trn_type, pay_type, amount, login_id, remarks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eHRM.rmAccounts.TransferDocumentsResponse eHRM.rmAccounts.Accounts_WebServiceSoap.TransferDocuments(eHRM.rmAccounts.TransferDocumentsRequest request) {
            return base.Channel.TransferDocuments(request);
        }
        
        public string TransferDocuments(string Doc_date, string Division, string Unit_Id, string FinYear, string FileType, string FileName, byte[] data, out string msg) {
            eHRM.rmAccounts.TransferDocumentsRequest inValue = new eHRM.rmAccounts.TransferDocumentsRequest();
            inValue.Doc_date = Doc_date;
            inValue.Division = Division;
            inValue.Unit_Id = Unit_Id;
            inValue.FinYear = FinYear;
            inValue.FileType = FileType;
            inValue.FileName = FileName;
            inValue.data = data;
            eHRM.rmAccounts.TransferDocumentsResponse retVal = ((eHRM.rmAccounts.Accounts_WebServiceSoap)(this)).TransferDocuments(inValue);
            msg = retVal.msg;
            return retVal.TransferDocumentsResult;
        }
        
        public System.Data.DataSet GetDailySalesReport(out string processInfo, string From, string to, string Logic, string unit_id, string _database) {
            return base.Channel.GetDailySalesReport(out processInfo, From, to, Logic, unit_id, _database);
        }
        
        public string ServiceCharges(out string processInfo, string unit_id, string dFrom, string dTo) {
            return base.Channel.ServiceCharges(out processInfo, unit_id, dFrom, dTo);
        }
        
        public System.Data.DataSet Dynamic_ReportQueries(out string processInfo, string emp_code, string unit_id, string from, string to, string prm_1, string prm_2, int prm_3, string report_name) {
            return base.Channel.Dynamic_ReportQueries(out processInfo, emp_code, unit_id, from, to, prm_1, prm_2, prm_3, report_name);
        }
        
        public System.Data.DataSet ReceivableByBusinessHead(out string processInfo, string emp_code) {
            return base.Channel.ReceivableByBusinessHead(out processInfo, emp_code);
        }
    }
}
